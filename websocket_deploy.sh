#!/bin/bash

# ÁæΩÊØõÁêÉÂàÜÊûêÁ≥ªÁªü - WebSocketÁâàÊú¨ÈÉ®ÁΩ≤ËÑöÊú¨
# ÈÄÇÁî®‰∫é‰ªéÊóßÁâàÊú¨ÂçáÁ∫ßÂà∞WebSocketÁâàÊú¨

set -e  # ÈÅáÂà∞ÈîôËØØÁ´ãÂç≥ÈÄÄÂá∫

echo "üöÄ ÂºÄÂßãÈÉ®ÁΩ≤ÁæΩÊØõÁêÉÂàÜÊûêÁ≥ªÁªü WebSocketÁâàÊú¨..."
echo "================================================"

# È¢úËâ≤ÂÆö‰πâ
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Êó•ÂøóÂáΩÊï∞
log_info() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

log_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

log_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

log_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# 1. Ê£ÄÊü•ÂΩìÂâçÁõÆÂΩï
if [ ! -f "manage.py" ]; then
    log_error "ËØ∑Âú®È°πÁõÆÊ†πÁõÆÂΩïËøêË°åÊ≠§ËÑöÊú¨"
    exit 1
fi

# 2. Â§á‰ªΩÂΩìÂâçÁâàÊú¨
log_info "üì¶ Â§á‰ªΩÂΩìÂâçÁâàÊú¨..."
BACKUP_DIR="/opt/badminton-analysis-backup-$(date +%Y%m%d-%H%M%S)"
sudo mkdir -p "$BACKUP_DIR"
sudo cp -r . "$BACKUP_DIR/"
log_success "Â§á‰ªΩÂÆåÊàê: $BACKUP_DIR"

# 3. ÂÅúÊ≠¢Áé∞ÊúâÊúçÂä°
log_info "üõë ÂÅúÊ≠¢Áé∞ÊúâÊúçÂä°..."
sudo systemctl stop badminton-analysis.service 2>/dev/null || true
sudo pkill -f "python manage.py runserver" 2>/dev/null || true
sudo pkill -f "gunicorn" 2>/dev/null || true
sudo pkill -f "daphne" 2>/dev/null || true

# 4. Êõ¥Êñ∞Á≥ªÁªüÂåÖ
log_info "üì¶ Êõ¥Êñ∞Á≥ªÁªüÂåÖ..."
sudo apt update
sudo apt upgrade -y

# 5. ÂÆâË£ÖWebSocketÁõ∏ÂÖ≥‰æùËµñ
log_info "üîß ÂÆâË£ÖWebSocketÁõ∏ÂÖ≥‰æùËµñ..."
sudo apt install -y python3 python3-pip python3-venv nginx redis-server

# 6. ÂêØÂä®RedisÊúçÂä°ÔºàWebSocketÈúÄË¶ÅÔºâ
log_info "üî¥ ÂêØÂä®RedisÊúçÂä°..."
sudo systemctl enable redis-server
sudo systemctl start redis-server

# 7. Êõ¥Êñ∞È°πÁõÆ‰ª£Á†Å
log_info "üì• Êõ¥Êñ∞È°πÁõÆ‰ª£Á†Å..."
if [ -d ".git" ]; then
    git pull origin master
    log_success "‰ª£Á†ÅÊõ¥Êñ∞ÂÆåÊàê"
else
    log_warning "Êú™Ê£ÄÊµãÂà∞Git‰ªìÂ∫ìÔºåËØ∑Á°Æ‰øù‰ª£Á†ÅÊòØÊúÄÊñ∞ÁâàÊú¨"
fi

# 8. Êõ¥Êñ∞Python‰æùËµñ
log_info "üêç Êõ¥Êñ∞Python‰æùËµñ..."
if [ ! -d "venv" ]; then
    python3 -m venv venv
fi

source venv/bin/activate
pip install --upgrade pip
pip install -r requirements.txt

# ÂÆâË£ÖÈ¢ùÂ§ñÁöÑWebSocket‰æùËµñ
pip install channels[redis] daphne

log_success "Python‰æùËµñÂÆâË£ÖÂÆåÊàê"

# 9. Êï∞ÊçÆÂ∫ìËøÅÁßª
log_info "üóÑÔ∏è ÊâßË°åÊï∞ÊçÆÂ∫ìËøÅÁßª..."
python manage.py makemigrations
python manage.py migrate
log_success "Êï∞ÊçÆÂ∫ìËøÅÁßªÂÆåÊàê"

# 10. Êî∂ÈõÜÈùôÊÄÅÊñá‰ª∂
log_info "üì¶ Êî∂ÈõÜÈùôÊÄÅÊñá‰ª∂..."
python manage.py collectstatic --noinput
log_success "ÈùôÊÄÅÊñá‰ª∂Êî∂ÈõÜÂÆåÊàê"

# 11. ÂàõÂª∫Êñ∞ÁöÑsystemdÊúçÂä°Êñá‰ª∂ÔºàÊîØÊåÅASGIÔºâ
log_info "üîß ÂàõÂª∫ASGIÊúçÂä°Êñá‰ª∂..."
sudo tee /etc/systemd/system/badminton-analysis.service > /dev/null <<EOF
[Unit]
Description=Badminton Analysis Django Application (WebSocket)
After=network.target redis-server.service

[Service]
Type=simple
User=$USER
Group=$USER
WorkingDirectory=$(pwd)
Environment=PATH=$(pwd)/venv/bin
Environment=DJANGO_SETTINGS_MODULE=djangodemo.settings
ExecStart=$(pwd)/venv/bin/daphne -b 0.0.0.0 -p 8000 djangodemo.asgi:application
Restart=always
RestartSec=10

[Install]
WantedBy=multi-user.target
EOF

# 12. ÂàõÂª∫Êñ∞ÁöÑNginxÈÖçÁΩÆÔºàÊîØÊåÅWebSocketÔºâ
log_info "üåê ÈÖçÁΩÆNginxÊîØÊåÅWebSocket..."
sudo tee /etc/nginx/sites-available/badminton-analysis > /dev/null <<EOF
server {
    listen 80;
    server_name _;
    
    # ÂÆ¢Êà∑Á´ØÊúÄÂ§ß‰∏ä‰º†Â§ßÂ∞è
    client_max_body_size 100M;
    
    # ÈùôÊÄÅÊñá‰ª∂
    location /static/ {
        alias $(pwd)/staticfiles/;
        expires 30d;
        add_header Cache-Control "public, immutable";
    }
    
    # Â™í‰ΩìÊñá‰ª∂
    location /images/ {
        alias $(pwd)/images/;
        expires 30d;
        add_header Cache-Control "public, immutable";
    }
    
    # WebSocketÊîØÊåÅ
    location /ws/ {
        proxy_pass http://127.0.0.1:8000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade \$http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host \$host;
        proxy_set_header X-Real-IP \$remote_addr;
        proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto \$scheme;
        proxy_read_timeout 86400;
    }
    
    # HTTP‰ª£ÁêÜ
    location / {
        proxy_pass http://127.0.0.1:8000;
        proxy_set_header Host \$host;
        proxy_set_header X-Real-IP \$remote_addr;
        proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto \$scheme;
    }
    
    # ÂÆâÂÖ®Â§¥
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
}
EOF

# ÂêØÁî®NginxÈÖçÁΩÆ
sudo ln -sf /etc/nginx/sites-available/badminton-analysis /etc/nginx/sites-enabled/
sudo rm -f /etc/nginx/sites-enabled/default

# ÊµãËØïNginxÈÖçÁΩÆ
sudo nginx -t
sudo systemctl restart nginx

log_success "NginxÈÖçÁΩÆÂÆåÊàê"

# 13. ÂêØÂä®ÊúçÂä°
log_info "üöÄ ÂêØÂä®ÊúçÂä°..."
sudo systemctl daemon-reload
sudo systemctl enable badminton-analysis.service
sudo systemctl start badminton-analysis.service

# 14. Á≠âÂæÖÊúçÂä°ÂêØÂä®
log_info "‚è≥ Á≠âÂæÖÊúçÂä°ÂêØÂä®..."
sleep 10

# 15. Ê£ÄÊü•ÊúçÂä°Áä∂ÊÄÅ
log_info "‚úÖ Ê£ÄÊü•ÊúçÂä°Áä∂ÊÄÅ..."
if sudo systemctl is-active --quiet badminton-analysis.service; then
    log_success "ÊúçÂä°ÂêØÂä®ÊàêÂäü"
else
    log_error "ÊúçÂä°ÂêØÂä®Â§±Ë¥•"
    sudo systemctl status badminton-analysis.service --no-pager
    exit 1
fi

# 16. Ê£ÄÊü•WebSocketËøûÊé•
log_info "üîå ÊµãËØïWebSocketËøûÊé•..."
curl -s http://localhost:8000/ > /dev/null && log_success "HTTPÊúçÂä°Ê≠£Â∏∏" || log_error "HTTPÊúçÂä°ÂºÇÂ∏∏"

# 17. ÊòæÁ§∫ÈÉ®ÁΩ≤‰ø°ÊÅØ
echo ""
echo "üéâ WebSocketÁâàÊú¨ÈÉ®ÁΩ≤ÂÆåÊàêÔºÅ"
echo "================================================"
echo "üìä ÊúçÂä°Âú∞ÂùÄ: http://$(curl -s ifconfig.me 2>/dev/null || echo 'localhost'):8000"
echo "üîß ÁÆ°ÁêÜÂú∞ÂùÄ: http://$(curl -s ifconfig.me 2>/dev/null || echo 'localhost'):8000/admin"
echo "üîå WebSocketÁ´ØÁÇπ: ws://$(curl -s ifconfig.me 2>/dev/null || echo 'localhost'):8000/ws/"
echo ""
echo "üìù Â∏∏Áî®ÂëΩ‰ª§:"
echo "  Êü•ÁúãÊó•Âøó: sudo journalctl -u badminton-analysis.service -f"
echo "  ÂÅúÊ≠¢ÊúçÂä°: sudo systemctl stop badminton-analysis.service"
echo "  ÂêØÂä®ÊúçÂä°: sudo systemctl start badminton-analysis.service"
echo "  ÈáçÂêØÊúçÂä°: sudo systemctl restart badminton-analysis.service"
echo "  ÈáçÂêØNginx: sudo systemctl restart nginx"
echo ""
echo "üîç ÊµãËØïWebSocketËøûÊé•:"
echo "  ESP32ËÆæÂ§á: ws://$(curl -s ifconfig.me 2>/dev/null || echo 'localhost'):8000/ws/esp32/{device_code}/"
echo "  Â∞èÁ®ãÂ∫è: ws://$(curl -s ifconfig.me 2>/dev/null || echo 'localhost'):8000/ws/miniprogram/{user_id}/"
echo "  ÁÆ°ÁêÜÂêéÂè∞: ws://$(curl -s ifconfig.me 2>/dev/null || echo 'localhost'):8000/ws/admin/"
echo ""
echo "üì¶ Â§á‰ªΩ‰ΩçÁΩÆ: $BACKUP_DIR"
echo "================================================" 