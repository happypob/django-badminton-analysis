# Generated by Django 5.2.4 on 2025-07-11 01:47

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('wxapp', '0004_devicegroup_rename_upload_time_sensordata_timestamp_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='analysisresult',
            options={'verbose_name': '分析结果', 'verbose_name_plural': '分析结果'},
        ),
        migrations.AlterModelOptions(
            name='datacollectionsession',
            options={'verbose_name': '数据采集会话', 'verbose_name_plural': '数据采集会话'},
        ),
        migrations.AlterModelOptions(
            name='devicebind',
            options={'verbose_name': '设备绑定', 'verbose_name_plural': '设备绑定'},
        ),
        migrations.AlterModelOptions(
            name='devicegroup',
            options={'verbose_name': '设备组', 'verbose_name_plural': '设备组'},
        ),
        migrations.AlterModelOptions(
            name='sensordata',
            options={'verbose_name': '传感器数据', 'verbose_name_plural': '传感器数据'},
        ),
        migrations.AlterModelOptions(
            name='wxuser',
            options={'verbose_name': '微信用户', 'verbose_name_plural': '微信用户'},
        ),
        migrations.AlterField(
            model_name='analysisresult',
            name='analysis_time',
            field=models.DateTimeField(auto_now_add=True, verbose_name='分析时间'),
        ),
        migrations.AlterField(
            model_name='analysisresult',
            name='energy_ratio',
            field=models.FloatField(verbose_name='能量传递效率'),
        ),
        migrations.AlterField(
            model_name='analysisresult',
            name='phase_delay',
            field=models.JSONField(verbose_name='时序延迟数据'),
        ),
        migrations.AlterField(
            model_name='analysisresult',
            name='rom_data',
            field=models.JSONField(verbose_name='关节活动度数据'),
        ),
        migrations.AlterField(
            model_name='analysisresult',
            name='session',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='wxapp.datacollectionsession', verbose_name='采集会话'),
        ),
        migrations.AlterField(
            model_name='datacollectionsession',
            name='device_group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='wxapp.devicegroup', verbose_name='设备组'),
        ),
        migrations.AlterField(
            model_name='datacollectionsession',
            name='end_time',
            field=models.DateTimeField(blank=True, null=True, verbose_name='结束时间'),
        ),
        migrations.AlterField(
            model_name='datacollectionsession',
            name='start_time',
            field=models.DateTimeField(auto_now_add=True, verbose_name='开始时间'),
        ),
        migrations.AlterField(
            model_name='datacollectionsession',
            name='status',
            field=models.CharField(choices=[('calibrating', '校准中'), ('collecting', '采集中'), ('analyzing', '分析中'), ('completed', '已完成'), ('stopped', '已停止')], default='calibrating', max_length=20, verbose_name='状态'),
        ),
        migrations.AlterField(
            model_name='datacollectionsession',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='wxapp.wxuser', verbose_name='用户'),
        ),
        migrations.AlterField(
            model_name='devicebind',
            name='bind_time',
            field=models.DateTimeField(auto_now_add=True, verbose_name='绑定时间'),
        ),
        migrations.AlterField(
            model_name='devicebind',
            name='device_code',
            field=models.CharField(max_length=64, verbose_name='设备编码'),
        ),
        migrations.AlterField(
            model_name='devicebind',
            name='wx_user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='wxapp.wxuser', verbose_name='微信用户'),
        ),
        migrations.AlterField(
            model_name='devicegroup',
            name='created_time',
            field=models.DateTimeField(auto_now_add=True, verbose_name='创建时间'),
        ),
        migrations.AlterField(
            model_name='devicegroup',
            name='group_code',
            field=models.CharField(max_length=64, unique=True, verbose_name='设备组编号'),
        ),
        migrations.AlterField(
            model_name='sensordata',
            name='data',
            field=models.TextField(verbose_name='传感器数据'),
        ),
        migrations.AlterField(
            model_name='sensordata',
            name='device_code',
            field=models.CharField(max_length=64, verbose_name='设备编码'),
        ),
        migrations.AlterField(
            model_name='sensordata',
            name='sensor_type',
            field=models.CharField(choices=[('waist', '腰部传感器'), ('shoulder', '肩部传感器'), ('wrist', '腕部传感器'), ('racket', '球拍传感器'), ('unknown', '未知传感器')], default='unknown', max_length=20, verbose_name='传感器类型'),
        ),
        migrations.AlterField(
            model_name='sensordata',
            name='session',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='wxapp.datacollectionsession', verbose_name='采集会话'),
        ),
        migrations.AlterField(
            model_name='sensordata',
            name='timestamp',
            field=models.DateTimeField(auto_now_add=True, verbose_name='时间戳'),
        ),
        migrations.AlterField(
            model_name='wxuser',
            name='openid',
            field=models.CharField(max_length=64, unique=True, verbose_name='微信OpenID'),
        ),
        migrations.AlterField(
            model_name='wxuser',
            name='user',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Django用户'),
        ),
        migrations.CreateModel(
            name='MiniProgramData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_type', models.IntegerField(choices=[(1, '数据1'), (2, '数据2'), (3, '数据3')], verbose_name='数据类型')),
                ('content', models.TextField(verbose_name='数据内容')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='时间戳')),
            ],
            options={
                'verbose_name': '小程序数据',
                'verbose_name_plural': '小程序数据',
                'indexes': [models.Index(fields=['data_type', 'timestamp'], name='wxapp_minip_data_ty_be51c8_idx')],
            },
        ),
    ]
